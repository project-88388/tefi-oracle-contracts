"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _prompt = require("../prompt");

var _fromPartial = _interopRequireDefault(require("../from-partial"));

var _utils = require("../utils");

var _default = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(argv) {
    var questions, _yield$prompt, schema, out, name, schemas;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            questions = [{
              _: true,
              type: 'path',
              name: 'schema',
              message: 'which directory contains the the Rust contracts?',
              "default": './schema'
            }, {
              _: true,
              type: 'path',
              name: 'out',
              message: 'where is the output directory?',
              "default": './ts'
            }, {
              _: true,
              type: 'string',
              name: 'name',
              message: 'contract name?'
            }];
            _context.next = 3;
            return (0, _prompt.prompt)(questions, argv);

          case 3:
            _yield$prompt = _context.sent;
            schema = _yield$prompt.schema;
            out = _yield$prompt.out;
            name = _yield$prompt.name;
            schemas = (0, _utils.readSchemas)({
              schemaDir: schema,
              argv: argv
            });
            _context.next = 10;
            return (0, _fromPartial["default"])(name, schemas, out);

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports["default"] = _default;