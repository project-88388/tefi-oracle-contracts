"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const path_1 = tslib_1.__importDefault(require("path"));
const runCommand_1 = tslib_1.__importDefault(require("../../lib/runCommand"));
const defaultErrorCheck_1 = tslib_1.__importDefault(require("../../lib/defaultErrorCheck"));
const TerrainCLI_1 = tslib_1.__importDefault(require("../../TerrainCLI"));
class ContractSchema extends command_1.Command {
    async run() {
        const { args } = this.parse(ContractSchema);
        // Command execution path.
        const execPath = path_1.default.join('contracts', args.contract);
        // Command to be performed.
        const command = async () => {
            process.chdir(execPath);
            TerrainCLI_1.default.runCargoCommand('schema');
        };
        // Attempt to execute command while backtracking through file tree.
        await (0, runCommand_1.default)(execPath, command, (0, defaultErrorCheck_1.default)(args.contract));
    }
}
ContractSchema.description = 'Generate contract schema.';
ContractSchema.args = [{ name: 'contract', required: true }];
exports.default = ContractSchema;
