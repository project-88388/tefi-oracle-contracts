"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const child_process_1 = require("child_process");
const path_1 = require("path");
const runCommand_1 = tslib_1.__importDefault(require("../lib/runCommand"));
const defaultErrorCheck_1 = tslib_1.__importDefault(require("../lib/defaultErrorCheck"));
/**
 * Runs unit tests for a contract directory.
 * Examples:
 * $ terrain test counter
 * $ terrain test counter --no-fail-fast
 */
class Test extends command_1.Command {
    async run() {
        // Extract args and flags specified in executed test command.
        const { args, flags } = this.parse(Test);
        // Command execution path.
        const execPath = (0, path_1.join)('contracts', args['contract-name']);
        // Command to be performed.
        const command = () => {
            process.chdir(execPath);
            (0, child_process_1.execSync)(`cargo test ${flags['no-fail-fast'] ? '--no-fail-fast' : ''}`, { stdio: 'inherit' });
        };
        // Attempt to execute command while backtracking through file tree.
        await (0, runCommand_1.default)(execPath, command, (0, defaultErrorCheck_1.default)(args['contract-name']));
    }
}
// Specify description to be displayed upon help command execution.
Test.description = 'Runs unit tests for a contract directory.';
// Specify examples included upon help test command execution.
Test.examples = [
    '$ terrain test counter',
    '$ terrain test counter --no-fail-fast',
];
// Initialize args to be given after test command.
Test.args = [{ name: 'contract-name', required: true }];
// Initialize flags, prefixed with '--' in a terminal command, to be given after args.
Test.flags = {
    'no-fail-fast': command_1.flags.boolean({ description: 'Run all tests regardless of failure.' }),
};
exports.default = Test;
