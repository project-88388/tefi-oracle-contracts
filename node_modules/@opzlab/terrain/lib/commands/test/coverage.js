"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const child_process_1 = require("child_process");
const path = tslib_1.__importStar(require("path"));
const fs = tslib_1.__importStar(require("fs"));
class Test extends command_1.Command {
    async run() {
        const { args, flags } = this.parse(Test);
        const contractName = args['contract-name'];
        if (contractName) {
            process.chdir(path.join('contracts', contractName));
        }
        const exists = fs.existsSync('./Cargo.toml');
        if (!exists) {
            throw Error(`Folder '${process.cwd()}' does not contain a smart contract.\nTip: Use another path or contract name`);
        }
        (0, child_process_1.execSync)(`docker run --security-opt seccomp=unconfined -v "${process.cwd()}:/volume" xd009642/tarpaulin`, { stdio: 'inherit' });
    }
}
Test.description = 'Runs unit tests for a contract directory.';
Test.examples = [
    '$ terrain test:coverage',
    '$ terrain test:coverage counter',
];
Test.flags = {};
Test.args = [{ name: 'contract-name' }];
exports.default = Test;
