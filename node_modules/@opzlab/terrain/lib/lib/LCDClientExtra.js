"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LCDClientExtra = void 0;
const feather_js_1 = require("@terra-money/feather.js");
class LCDClientExtra extends feather_js_1.LCDClient {
    constructor(config, chainID, prefix, refs) {
        super(config);
        this.refs = refs;
        this.config = config;
        this.chainID = chainID;
        this.prefix = prefix;
    }
    query(contract, msg, instanceId = 'default') {
        return this.wasm.contractQuery(this.refs[this.chainID][contract].contractAddresses[instanceId], msg);
    }
    async execute(contract, wallet, msg, coins, options, instanceId = 'default') {
        const msgs = [
            new feather_js_1.MsgExecuteContract(wallet.key.accAddress(this.prefix), 
            // Enable supplying a contract address instead of the contract name.
            feather_js_1.AccAddress.validate(contract) ? contract
                : this.refs[this.chainID][contract].contractAddresses[instanceId], msg, coins),
        ];
        const mergedOptions = options ? Object.assign(Object.assign({}, options), { msgs }) : { msgs };
        const txOpions = Object.assign(Object.assign({}, mergedOptions), { chainID: this.chainID });
        const tx = await wallet.createAndSignTx(txOpions);
        return this.tx.broadcast(tx, this.chainID);
    }
}
exports.LCDClientExtra = LCDClientExtra;
