import { JSONSerializable } from '../../../util/json';
import { AccAddress, ValAddress } from '../../bech32';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgClaimDelegationRewards as MsgClaimDelegationRewards_pb } from '@terra-money/terra.proto/alliance/tx';
/**
 * A delegator can withdraw currently outstanding rewards accrued
 * from their delegation toward a validator by submitting the following message
 * to te x/alliance module.
 *
 * The rewards will be deposited to their Withdraw Address.
 */
export declare class MsgClaimDelegationRewards extends JSONSerializable<MsgClaimDelegationRewards.Amino, MsgClaimDelegationRewards.Data, MsgClaimDelegationRewards.Proto> {
    delegator_address: AccAddress;
    validator_address: ValAddress;
    denom: string;
    /**
     *
     * @param delegator_address delegator's account address
     * @param validator_address validator's operator address
     * @param denom alliance denom to claim rewards for (e.g. ibc/AAE7E4 or uluna...)
     */
    constructor(delegator_address: AccAddress, validator_address: ValAddress, denom: string);
    static fromAmino(data: MsgClaimDelegationRewards.Amino, _?: boolean): MsgClaimDelegationRewards;
    toAmino(_?: boolean): MsgClaimDelegationRewards.Amino;
    static fromData(proto: MsgClaimDelegationRewards.Data, _?: boolean): MsgClaimDelegationRewards;
    toData(_?: boolean): MsgClaimDelegationRewards.Data;
    static fromProto(proto: MsgClaimDelegationRewards.Proto, _?: boolean): MsgClaimDelegationRewards;
    toProto(_?: boolean): MsgClaimDelegationRewards.Proto;
    packAny(_?: boolean): Any;
    static unpackAny(msgAny: Any, _?: boolean): MsgClaimDelegationRewards;
}
export declare namespace MsgClaimDelegationRewards {
    interface Amino {
        type: 'alliance/MsgClaimDelegationRewards';
        value: {
            delegator_address: AccAddress;
            validator_address: ValAddress;
            denom: string;
        };
    }
    interface Data {
        '@type': '/alliance.alliance.MsgClaimDelegationRewards';
        delegator_address: AccAddress;
        validator_address: ValAddress;
        denom: string;
    }
    type Proto = MsgClaimDelegationRewards_pb;
}
