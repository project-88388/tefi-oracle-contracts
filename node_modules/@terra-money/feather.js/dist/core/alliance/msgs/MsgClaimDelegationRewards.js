"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgClaimDelegationRewards = void 0;
var json_1 = require("../../../util/json");
var any_1 = require("@terra-money/terra.proto/google/protobuf/any");
var tx_1 = require("@terra-money/terra.proto/alliance/tx");
/**
 * A delegator can withdraw currently outstanding rewards accrued
 * from their delegation toward a validator by submitting the following message
 * to te x/alliance module.
 *
 * The rewards will be deposited to their Withdraw Address.
 */
var MsgClaimDelegationRewards = /** @class */ (function (_super) {
    __extends(MsgClaimDelegationRewards, _super);
    /**
     *
     * @param delegator_address delegator's account address
     * @param validator_address validator's operator address
     * @param denom alliance denom to claim rewards for (e.g. ibc/AAE7E4 or uluna...)
     */
    function MsgClaimDelegationRewards(delegator_address, validator_address, denom) {
        var _this = _super.call(this) || this;
        _this.delegator_address = delegator_address;
        _this.validator_address = validator_address;
        _this.denom = denom;
        return _this;
    }
    MsgClaimDelegationRewards.fromAmino = function (data, _) {
        _;
        var _a = data.value, delegator_address = _a.delegator_address, validator_address = _a.validator_address, denom = _a.denom;
        return new MsgClaimDelegationRewards(delegator_address, validator_address, denom);
    };
    MsgClaimDelegationRewards.prototype.toAmino = function (_) {
        _;
        var _a = this, delegator_address = _a.delegator_address, validator_address = _a.validator_address, denom = _a.denom;
        return {
            type: 'alliance/MsgClaimDelegationRewards',
            value: {
                delegator_address: delegator_address,
                validator_address: validator_address,
                denom: denom,
            },
        };
    };
    MsgClaimDelegationRewards.fromData = function (proto, _) {
        _;
        var delegator_address = proto.delegator_address, validator_address = proto.validator_address, denom = proto.denom;
        return new MsgClaimDelegationRewards(delegator_address, validator_address, denom);
    };
    MsgClaimDelegationRewards.prototype.toData = function (_) {
        _;
        var _a = this, delegator_address = _a.delegator_address, validator_address = _a.validator_address, denom = _a.denom;
        return {
            '@type': '/alliance.alliance.MsgClaimDelegationRewards',
            delegator_address: delegator_address,
            validator_address: validator_address,
            denom: denom,
        };
    };
    MsgClaimDelegationRewards.fromProto = function (proto, _) {
        _;
        return new MsgClaimDelegationRewards(proto.delegatorAddress, proto.validatorAddress, proto.denom);
    };
    MsgClaimDelegationRewards.prototype.toProto = function (_) {
        _;
        var _a = this, delegator_address = _a.delegator_address, validator_address = _a.validator_address, denom = _a.denom;
        return tx_1.MsgClaimDelegationRewards.fromPartial({
            delegatorAddress: delegator_address,
            validatorAddress: validator_address,
            denom: denom,
        });
    };
    MsgClaimDelegationRewards.prototype.packAny = function (_) {
        _;
        return any_1.Any.fromPartial({
            typeUrl: '/alliance.alliance.MsgClaimDelegationRewards',
            value: tx_1.MsgClaimDelegationRewards.encode(this.toProto()).finish(),
        });
    };
    MsgClaimDelegationRewards.unpackAny = function (msgAny, _) {
        _;
        return MsgClaimDelegationRewards.fromProto(tx_1.MsgClaimDelegationRewards.decode(msgAny.value));
    };
    return MsgClaimDelegationRewards;
}(json_1.JSONSerializable));
exports.MsgClaimDelegationRewards = MsgClaimDelegationRewards;
//# sourceMappingURL=MsgClaimDelegationRewards.js.map