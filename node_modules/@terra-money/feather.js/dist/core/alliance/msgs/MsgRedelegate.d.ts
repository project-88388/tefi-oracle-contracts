import { JSONSerializable } from '../../../util/json';
import { Coin } from '../../Coin';
import { AccAddress, ValAddress } from '../../bech32';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgRedelegate as MsgRedelegate_pb } from '@terra-money/terra.proto/alliance/tx';
/**
 * A delegator can choose to redelegate their bonded alliance assets
 * and transfer a delegation from one validator to another. Unlike
 * undelegating, redelegations do not incur a 21-day unbonding period
 * and happen immediately.
 */
export declare class MsgRedelegate extends JSONSerializable<MsgRedelegate.Amino, MsgRedelegate.Data, MsgRedelegate.Proto> {
    delegator_address: AccAddress;
    validator_src_address: ValAddress;
    validator_dst_address: ValAddress;
    amount: Coin;
    /**
     *
     * @param delegator_address delegator's account address
     * @param validator_src_address validator to undelegate from
     * @param validator_dst_address validator to delegate to
     * @param amount amount of alliance assets to be redelegated
     */
    constructor(delegator_address: AccAddress, validator_src_address: ValAddress, validator_dst_address: ValAddress, amount: Coin);
    static fromAmino(data: MsgRedelegate.Amino, _?: boolean): MsgRedelegate;
    toAmino(_?: boolean): MsgRedelegate.Amino;
    static fromData(data: MsgRedelegate.Data, _?: boolean): MsgRedelegate;
    toData(_?: boolean): MsgRedelegate.Data;
    static fromProto(proto: MsgRedelegate.Proto, _?: boolean): MsgRedelegate;
    toProto(_?: boolean): MsgRedelegate.Proto;
    packAny(_?: boolean): Any;
    static unpackAny(msgAny: Any, _?: boolean): MsgRedelegate;
}
export declare namespace MsgRedelegate {
    interface Amino {
        type: 'alliance/MsgRedelegate';
        value: {
            delegator_address: AccAddress;
            validator_src_address: ValAddress;
            validator_dst_address: ValAddress;
            amount: Coin.Amino;
        };
    }
    interface Data {
        '@type': '/alliance.alliance.MsgRedelegate';
        delegator_address: AccAddress;
        validator_src_address: ValAddress;
        validator_dst_address: ValAddress;
        amount: Coin.Data;
    }
    type Proto = MsgRedelegate_pb;
}
