import { Coin } from '../../Coin';
import { JSONSerializable } from '../../../util/json';
import { AccAddress, ValAddress } from '../../bech32';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgUndelegate as MsgUndelegate_pb } from '@terra-money/terra.proto/alliance/tx';
/**
 * A delegator can undelegate an amount of bonded alliance tokens
 * form the x/alliance module, and will begin the unbonding process
 * for those funds. The unbonding process takes 21 days to complete,
 * during which the Luna cannot be transacted or swapped.
 */
export declare class MsgUndelegate extends JSONSerializable<MsgUndelegate.Amino, MsgUndelegate.Data, MsgUndelegate.Proto> {
    delegator_address: AccAddress;
    validator_address: ValAddress;
    amount: Coin;
    /**
     * @param delegator_address delegator's account address
     * @param validator_address validator's operator address
     * @param amount alliance assets to be undelegated
     */
    constructor(delegator_address: AccAddress, validator_address: ValAddress, amount: Coin);
    static fromAmino(data: MsgUndelegate.Amino, _?: boolean): MsgUndelegate;
    toAmino(_?: boolean): MsgUndelegate.Amino;
    static fromProto(proto: MsgUndelegate.Proto, _?: boolean): MsgUndelegate;
    toProto(_?: boolean): MsgUndelegate.Proto;
    packAny(_?: boolean): Any;
    static unpackAny(msgAny: Any, _?: boolean): MsgUndelegate;
    static fromData(data: MsgUndelegate.Data, _?: boolean): MsgUndelegate;
    toData(_?: boolean): MsgUndelegate.Data;
}
export declare namespace MsgUndelegate {
    interface Amino {
        type: 'alliance/MsgUndelegate';
        value: {
            delegator_address: AccAddress;
            validator_address: ValAddress;
            amount: Coin.Amino;
        };
    }
    interface Data {
        '@type': '/alliance.alliance.MsgUndelegate';
        delegator_address: AccAddress;
        validator_address: ValAddress;
        amount: Coin.Data;
    }
    type Proto = MsgUndelegate_pb;
}
