import { JSONSerializable } from '../../../util/json';
import { Any } from '@terra-money/legacy.proto/google/protobuf/any';
import { MsgDeleteAllianceProposal as MsgDeleteAllianceProposal_pb } from '@terra-money/terra.proto/alliance/gov';
/**
 *  MsgDeleteAllianceProposal is gov content type to delete an existing alliance
 */
export declare class MsgDeleteAllianceProposal extends JSONSerializable<MsgDeleteAllianceProposal.Amino, MsgDeleteAllianceProposal.Data, MsgDeleteAllianceProposal.Proto> {
    title: string;
    description: string;
    denom: string;
    /**
     * @description Delete an existent alliance using the gov module
     * @param title of the proposal
     * @param description of the proposal
     * @param denom of the asset. It could either be a native token or an IBC token
     */
    constructor(title: string, description: string, denom: string);
    static fromAmino(data: MsgDeleteAllianceProposal.Amino, _?: boolean): MsgDeleteAllianceProposal;
    toAmino(_?: boolean): MsgDeleteAllianceProposal.Amino;
    static fromData(data: MsgDeleteAllianceProposal.Data, _?: boolean): MsgDeleteAllianceProposal;
    toData(_?: boolean): MsgDeleteAllianceProposal.Data;
    static fromProto(proto: MsgDeleteAllianceProposal.Proto, _?: boolean): MsgDeleteAllianceProposal;
    toProto(_?: boolean): MsgDeleteAllianceProposal.Proto;
    packAny(_?: boolean): Any;
    static unpackAny(msgAny: Any, _?: boolean): MsgDeleteAllianceProposal;
}
export declare namespace MsgDeleteAllianceProposal {
    interface Amino {
        type: 'alliance/MsgDeleteAllianceProposal';
        title: string;
        description: string;
        denom: string;
    }
    interface Data {
        '@type': '/alliance.alliance.MsgDeleteAllianceProposal';
        title: string;
        description: string;
        denom: string;
    }
    type Proto = MsgDeleteAllianceProposal_pb;
}
