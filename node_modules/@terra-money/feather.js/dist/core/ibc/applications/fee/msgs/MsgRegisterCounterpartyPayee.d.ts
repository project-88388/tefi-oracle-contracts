import { JSONSerializable } from '../../../../../util/json';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgRegisterCounterpartyPayee as MsgRegisterCounterpartyPayee_pb } from '@terra-money/terra.proto/ibc/applications/fee/v1/tx';
/** MsgRegisterCounterpartyPayee defines the request type for the RegisterCounterpartyPayee rpc */
export declare class MsgRegisterCounterpartyPayee extends JSONSerializable<any, MsgRegisterCounterpartyPayee.Data, MsgRegisterCounterpartyPayee.Proto> {
    portId: string;
    channelId: string;
    relayer: string;
    counterpartyPayee: string;
    /**
     * @param portId unique port identifier
     * @param channelId unique channel identifier
     * @param relayer the relayer address
     * @param counterpartyPayee the counterparty payee address
     */
    constructor(portId: string, channelId: string, relayer: string, counterpartyPayee: string);
    static fromAmino(_: any, isClassic?: boolean): MsgRegisterCounterpartyPayee;
    toAmino(isClassic?: boolean): any;
    static fromData(data: MsgRegisterCounterpartyPayee.Data, isClassic?: boolean): MsgRegisterCounterpartyPayee;
    toData(isClassic?: boolean): MsgRegisterCounterpartyPayee.Data;
    static fromProto(proto: MsgRegisterCounterpartyPayee.Proto, isClassic?: boolean): MsgRegisterCounterpartyPayee;
    toProto(isClassic?: boolean): MsgRegisterCounterpartyPayee.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgRegisterCounterpartyPayee;
}
export declare namespace MsgRegisterCounterpartyPayee {
    interface Data {
        '@type': '/ibc.applications.fee.v1.MsgRegisterCounterpartyPayee';
        portId: string;
        channelId: string;
        relayer: string;
        counterpartyPayee: string;
    }
    type Proto = MsgRegisterCounterpartyPayee_pb;
}
