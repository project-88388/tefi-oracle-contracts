import { JSONSerializable } from '../../../util/json';
import { AccAddress } from '../../bech32';
import { Coins } from '../../Coins';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgStoreCode as MsgStoreCode_pb } from '@terra-money/terra.proto/jax/tx';
export declare class MsgStoreCode extends JSONSerializable<MsgStoreCode.Amino, MsgStoreCode.Data, MsgStoreCode.Proto> {
    creator: AccAddress;
    admin: AccAddress;
    code: string;
    params: string;
    coins: Coins;
    /**
     * @param creator contract deployer
     * @param admin address of contract admin, usually contract deployer
     * @param code the JavaScript source code of the contract
     * @param params json stringified params to pass to init
     * @param coins coins to be sent to contract
     */
    constructor(creator: AccAddress, admin: AccAddress, code: string, params: string, coins?: Coins.Input);
    static fromAmino(data: MsgStoreCode.Amino, _?: boolean): MsgStoreCode;
    toAmino(_?: boolean): MsgStoreCode.Amino;
    static fromProto(proto: MsgStoreCode.Proto, _?: boolean): MsgStoreCode;
    toProto(_?: boolean): MsgStoreCode.Proto;
    packAny(isClassic?: boolean): Any;
    static unpackAny(msgAny: Any, isClassic?: boolean): MsgStoreCode;
    static fromData(data: MsgStoreCode.Data, _?: boolean): MsgStoreCode;
    toData(_?: boolean): MsgStoreCode.Data;
}
export declare namespace MsgStoreCode {
    interface AminoV1 {
        type: 'jax/MsgStoreCode';
        value: {
            creator: AccAddress;
            admin: AccAddress;
            code: string;
            params: string;
            coins: Coins.Amino;
        };
    }
    interface AminoV2 {
        type: 'jax/MsgStoreCode';
        value: {
            creator: AccAddress;
            admin: AccAddress;
            code: string;
            params: string;
            coins: Coins.Amino;
        };
    }
    interface DataV1 {
        '@type': '/jax.MsgStoreCode';
        creator: AccAddress;
        admin: AccAddress;
        code: string;
        params: string;
        coins: Coins.Data;
    }
    interface DataV2 {
        '@type': '/jax.MsgStoreCode';
        creator: AccAddress;
        admin: AccAddress;
        code: string;
        params: string;
        coins: Coins.Data;
    }
    type Amino = AminoV1 | AminoV2;
    type Data = DataV1 | DataV2;
    type Proto = MsgStoreCode_pb;
}
