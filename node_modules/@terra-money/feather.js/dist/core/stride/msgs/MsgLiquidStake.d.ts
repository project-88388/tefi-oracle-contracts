import { JSONSerializable } from '../../../util/json';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgLiquidStake as MsgLiquidStake_pb } from '@terra-money/terra.proto/stride/stakeibc/tx';
export declare class MsgLiquidStake extends JSONSerializable<{}, MsgLiquidStake.Data, MsgLiquidStake.Proto> {
    creator: string;
    amount: string;
    hostDenom: string;
    /**
     * @param creator the address of user who wants to create the staked assets
     * @param amount amount of native assets to be staked
     * @param hostDenom the denomination of the asset to be sent to delegate (uluna, uosmo...)
     */
    constructor(creator: string, amount: string, hostDenom: string);
    toAmino(_?: boolean): {};
    static fromProto(proto: MsgLiquidStake.Proto, _?: boolean): MsgLiquidStake;
    toProto(_?: boolean): MsgLiquidStake.Proto;
    packAny(_?: boolean): Any;
    static unpackAny(msgAny: Any, _?: boolean): MsgLiquidStake;
    static fromData(data: MsgLiquidStake.Data, _?: boolean): MsgLiquidStake;
    toData(_?: boolean): MsgLiquidStake.Data;
}
export declare namespace MsgLiquidStake {
    interface Data {
        '@type': '/stride.stakeibc.MsgLiquidStake';
        creator: string;
        amount: string;
        hostDenom: string;
    }
    type Proto = MsgLiquidStake_pb;
}
