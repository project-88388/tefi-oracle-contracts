import { JSONSerializable } from '../../../util/json';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgRedeemStake as MsgRedeemStake_pb } from '@terra-money/terra.proto/stride/stakeibc/tx';
export declare class MsgRedeemStake extends JSONSerializable<{}, MsgRedeemStake.Data, MsgRedeemStake.Proto> {
    creator: string;
    amount: string;
    hostZone: string;
    receiver: string;
    /**
     * @param creator the address of user who wants to redeem the staked assets
     * @param amount amount of alliance assets to be sent for delegation
     * @param hostZone the denomination of the asset to be sent to delegate
     * @param receiver the address of user to receive the unstaked assets
     */
    constructor(creator: string, amount: string, hostZone: string, receiver: string);
    toAmino(_?: boolean): {};
    static fromProto(proto: MsgRedeemStake.Proto, _?: boolean): MsgRedeemStake;
    toProto(_?: boolean): MsgRedeemStake.Proto;
    packAny(_?: boolean): Any;
    static unpackAny(msgAny: Any, _?: boolean): MsgRedeemStake;
    static fromData(data: MsgRedeemStake.Data, _?: boolean): MsgRedeemStake;
    toData(_?: boolean): MsgRedeemStake.Data;
}
export declare namespace MsgRedeemStake {
    interface Data {
        '@type': '/stride.stakeibc.MsgRedeemStake';
        creator: string;
        amount: string;
        hostZone: string;
        receiver: string;
    }
    type Proto = MsgRedeemStake_pb;
}
