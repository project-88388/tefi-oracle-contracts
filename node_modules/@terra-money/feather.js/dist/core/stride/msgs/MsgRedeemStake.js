"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgRedeemStake = void 0;
var json_1 = require("../../../util/json");
var any_1 = require("@terra-money/terra.proto/google/protobuf/any");
var tx_1 = require("@terra-money/terra.proto/stride/stakeibc/tx");
// Used on Stride to redeem the staked assets
var MsgRedeemStake = /** @class */ (function (_super) {
    __extends(MsgRedeemStake, _super);
    /**
     * @param creator the address of user who wants to redeem the staked assets
     * @param amount amount of alliance assets to be sent for delegation
     * @param hostZone the denomination of the asset to be sent to delegate
     * @param receiver the address of user to receive the unstaked assets
     */
    function MsgRedeemStake(creator, amount, hostZone, receiver) {
        var _this = _super.call(this) || this;
        _this.creator = creator;
        _this.amount = amount;
        _this.hostZone = hostZone;
        _this.receiver = receiver;
        return _this;
    }
    MsgRedeemStake.prototype.toAmino = function (_) {
        _;
        throw Error('Legacy Amino not supported for MsgRedeemStake messages. Use Protobuf instead.');
    };
    MsgRedeemStake.fromProto = function (proto, _) {
        _;
        return new MsgRedeemStake(proto.creator, proto.amount, proto.hostZone, proto.receiver);
    };
    MsgRedeemStake.prototype.toProto = function (_) {
        _;
        var _a = this, creator = _a.creator, amount = _a.amount, hostZone = _a.hostZone, receiver = _a.receiver;
        return tx_1.MsgRedeemStake.fromPartial({
            creator: creator,
            amount: amount,
            hostZone: hostZone,
            receiver: receiver,
        });
    };
    MsgRedeemStake.prototype.packAny = function (_) {
        _;
        return any_1.Any.fromPartial({
            typeUrl: '/stride.stakeibc.MsgRedeemStake',
            value: tx_1.MsgRedeemStake.encode(this.toProto()).finish(),
        });
    };
    MsgRedeemStake.unpackAny = function (msgAny, _) {
        _;
        return MsgRedeemStake.fromProto(tx_1.MsgRedeemStake.decode(msgAny.value));
    };
    MsgRedeemStake.fromData = function (data, _) {
        _;
        var creator = data.creator, amount = data.amount, hostZone = data.hostZone, receiver = data.receiver;
        return new MsgRedeemStake(creator, amount, hostZone, receiver);
    };
    MsgRedeemStake.prototype.toData = function (_) {
        _;
        var _a = this, creator = _a.creator, amount = _a.amount, hostZone = _a.hostZone, receiver = _a.receiver;
        return {
            '@type': '/stride.stakeibc.MsgRedeemStake',
            creator: creator,
            amount: amount,
            hostZone: hostZone,
            receiver: receiver,
        };
    };
    return MsgRedeemStake;
}(json_1.JSONSerializable));
exports.MsgRedeemStake = MsgRedeemStake;
//# sourceMappingURL=MsgRedeemStake.js.map