import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgChangeAdmin as MsgChangeAdmin_pb } from '@terra-money/terra.proto/cosmwasm/tokenfactory/v1beta1/tx';
export declare class MsgChangeAdmin extends JSONSerializable<MsgChangeAdmin.Amino, MsgChangeAdmin.Data, MsgChangeAdmin.Proto> {
    sender: AccAddress;
    newAdmin: AccAddress;
    denom: string;
    /**
     *
     * @param sender current admin
     * @param newAdmin new admin
     * @param denom denom to change its admin
     */
    constructor(sender: AccAddress, newAdmin: AccAddress, denom: string);
    toAmino(_?: boolean): MsgChangeAdmin.Amino;
    static fromProto(proto: MsgChangeAdmin.Proto, _?: boolean): MsgChangeAdmin;
    toProto(_?: boolean): MsgChangeAdmin.Proto;
    packAny(_?: boolean): Any;
    static unpackAny(msgAny: Any, _?: boolean): MsgChangeAdmin;
    static fromData(data: MsgChangeAdmin.Data, _?: boolean): MsgChangeAdmin;
    toData(_?: boolean): MsgChangeAdmin.Data;
    static fromAmino(data: MsgChangeAdmin.Amino): MsgChangeAdmin;
}
export declare namespace MsgChangeAdmin {
    interface Amino {
        type: 'osmosis/tokenfactory/change-admin';
        value: {
            sender: AccAddress;
            newAdmin: AccAddress;
            denom: string;
        };
    }
    interface Data {
        '@type': '/cosmwasm.tokenfactory.v1beta1.MsgChangeAdmin';
        sender: AccAddress;
        newAdmin: AccAddress;
        denom: string;
    }
    type Proto = MsgChangeAdmin_pb;
}
