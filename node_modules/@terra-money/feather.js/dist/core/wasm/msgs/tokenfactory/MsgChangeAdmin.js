"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgChangeAdmin = void 0;
var json_1 = require("../../../../util/json");
var any_1 = require("@terra-money/terra.proto/google/protobuf/any");
var tx_1 = require("@terra-money/terra.proto/cosmwasm/tokenfactory/v1beta1/tx");
// MsgChangeAdmin is the sdk.Msg type for allowing an admin account to reassign
// adminship of a denom to a new account
var MsgChangeAdmin = /** @class */ (function (_super) {
    __extends(MsgChangeAdmin, _super);
    /**
     *
     * @param sender current admin
     * @param newAdmin new admin
     * @param denom denom to change its admin
     */
    function MsgChangeAdmin(sender, newAdmin, denom) {
        var _this = _super.call(this) || this;
        _this.sender = sender;
        _this.newAdmin = newAdmin;
        _this.denom = denom;
        return _this;
    }
    MsgChangeAdmin.prototype.toAmino = function (_) {
        _;
        var _a = this, sender = _a.sender, newAdmin = _a.newAdmin, denom = _a.denom;
        return {
            type: 'osmosis/tokenfactory/change-admin',
            value: {
                sender: sender,
                newAdmin: newAdmin,
                denom: denom,
            },
        };
    };
    MsgChangeAdmin.fromProto = function (proto, _) {
        _;
        return new MsgChangeAdmin(proto.sender, proto.denom, proto.newAdmin);
    };
    MsgChangeAdmin.prototype.toProto = function (_) {
        _;
        var _a = this, sender = _a.sender, newAdmin = _a.newAdmin, denom = _a.denom;
        return tx_1.MsgChangeAdmin.fromPartial({
            sender: sender,
            newAdmin: newAdmin,
            denom: denom,
        });
    };
    MsgChangeAdmin.prototype.packAny = function (_) {
        _;
        return any_1.Any.fromPartial({
            typeUrl: '/cosmwasm.tokenfactory.v1beta1.MsgChangeAdmin',
            value: tx_1.MsgChangeAdmin.encode(this.toProto()).finish(),
        });
    };
    MsgChangeAdmin.unpackAny = function (msgAny, _) {
        _;
        return MsgChangeAdmin.fromProto(tx_1.MsgChangeAdmin.decode(msgAny.value));
    };
    MsgChangeAdmin.fromData = function (data, _) {
        _;
        var sender = data.sender, newAdmin = data.newAdmin, denom = data.denom;
        return new MsgChangeAdmin(sender, newAdmin, denom);
    };
    MsgChangeAdmin.prototype.toData = function (_) {
        _;
        var _a = this, sender = _a.sender, newAdmin = _a.newAdmin, denom = _a.denom;
        return {
            '@type': '/cosmwasm.tokenfactory.v1beta1.MsgChangeAdmin',
            sender: sender,
            newAdmin: newAdmin,
            denom: denom,
        };
    };
    MsgChangeAdmin.fromAmino = function (data) {
        var _a = data.value, sender = _a.sender, newAdmin = _a.newAdmin, denom = _a.denom;
        return new MsgChangeAdmin(sender, newAdmin, denom);
    };
    return MsgChangeAdmin;
}(json_1.JSONSerializable));
exports.MsgChangeAdmin = MsgChangeAdmin;
//# sourceMappingURL=MsgChangeAdmin.js.map