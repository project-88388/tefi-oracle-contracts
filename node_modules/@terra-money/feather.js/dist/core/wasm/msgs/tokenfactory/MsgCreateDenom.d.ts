import { JSONSerializable } from '../../../../util/json';
import { AccAddress } from '../../../bech32';
import { Any } from '@terra-money/terra.proto/google/protobuf/any';
import { MsgCreateDenom as MsgCreateDenom_pb } from '@terra-money/terra.proto/cosmwasm/tokenfactory/v1beta1/tx';
/**
 * MsgCreateDenom defines the message structure for the CreateDenom gRPC service
 * method. It allows an account to create a new denom. It requires a sender
 * address and a sub denomination. The (sender_address, sub_denomination) tuple
 * must be unique and cannot be re-used.
 *
 * The resulting denom created is defined as
 * <factory/{creatorAddress}/{subdenom}>. The resulting denom's admin is
 * originally set to be the creator, but this can be changed later. The token
 * denom does not indicate the current admin.
 */
export declare class MsgCreateDenom extends JSONSerializable<MsgCreateDenom.Amino, MsgCreateDenom.Data, MsgCreateDenom.Proto> {
    sender: AccAddress;
    subdenom: string;
    /**
     *
     * @param sender internal account or external sender address
     * @param subdenom can be up to 44 "alphanumeric" characters long.
     */
    constructor(sender: AccAddress, subdenom: string);
    toAmino(_?: boolean): MsgCreateDenom.Amino;
    static fromProto(proto: MsgCreateDenom.Proto, _?: boolean): MsgCreateDenom;
    toProto(_?: boolean): MsgCreateDenom.Proto;
    packAny(_?: boolean): Any;
    static unpackAny(msgAny: Any, _?: boolean): MsgCreateDenom;
    static fromData(data: MsgCreateDenom.Data, _?: boolean): MsgCreateDenom;
    toData(_?: boolean): MsgCreateDenom.Data;
    static fromAmino(data: MsgCreateDenom.Amino): MsgCreateDenom;
}
export declare namespace MsgCreateDenom {
    interface Amino {
        type: 'osmosis/tokenfactory/create-denom';
        value: {
            sender: AccAddress;
            subdenom: string;
        };
    }
    interface Data {
        '@type': '/cosmwasm.tokenfactory.v1beta1.MsgCreateDenom';
        sender: AccAddress;
        subdenom: string;
    }
    type Proto = MsgCreateDenom_pb;
}
