"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
class FileWriter {
    constructor(options) {
        this.TEMP_FOLDER = ".unzipped";
        this.write = (zip) => {
            var _a;
            const newFolder = (_a = this.options.localOptions) === null || _a === void 0 ? void 0 : _a.folderUrl;
            const subFolder = this.options.subFolder;
            if (!newFolder && !subFolder) {
                zip.extractAllTo(__dirname);
            }
            else {
                this.extractToTempFolder(zip);
                this.moveToExpectedFolder(newFolder, subFolder);
            }
        };
        this.extractToTempFolder = (zip) => {
            if (fs_1.default.existsSync(this.TEMP_FOLDER)) {
                fs_1.default.rmSync(this.TEMP_FOLDER, { recursive: true, force: true });
            }
            fs_1.default.mkdirSync(this.TEMP_FOLDER);
            zip.extractAllTo(this.TEMP_FOLDER);
        };
        this.moveToExpectedFolder = (newFolder, subFolder) => {
            if (newFolder && subFolder) {
                const subfolderInsideTemp = path_1.default.join(this.TEMP_FOLDER, subFolder);
                fs_1.default.mkdirSync(newFolder, { recursive: true });
                fs_1.default.renameSync(subfolderInsideTemp, newFolder);
            }
            else if (newFolder) {
                fs_1.default.mkdirSync(newFolder, { recursive: true });
                fs_1.default.renameSync(this.TEMP_FOLDER, newFolder);
            }
            else {
                fs_1.default.cpSync(this.TEMP_FOLDER, __dirname, { recursive: true });
            }
            fs_1.default.rmSync(this.TEMP_FOLDER, { recursive: true, force: true });
        };
        this.options = options;
    }
}
exports.default = FileWriter;
//# sourceMappingURL=FileWriter.js.map