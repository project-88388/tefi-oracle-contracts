import Long from "long";
import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "stride.icacallbacks";
export interface IcacallbacksPacketData {
    /** this line is used by starport scaffolding # ibc/packet/proto/field */
    noData?: NoData | undefined;
}
export interface NoData {
}
export declare const IcacallbacksPacketData: {
    encode(message: IcacallbacksPacketData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): IcacallbacksPacketData;
    fromJSON(object: any): IcacallbacksPacketData;
    toJSON(message: IcacallbacksPacketData): unknown;
    fromPartial(object: DeepPartial<IcacallbacksPacketData>): IcacallbacksPacketData;
};
export declare const NoData: {
    encode(_: NoData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): NoData;
    fromJSON(_: any): NoData;
    toJSON(_: NoData): unknown;
    fromPartial(_: DeepPartial<NoData>): NoData;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined | Long;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
