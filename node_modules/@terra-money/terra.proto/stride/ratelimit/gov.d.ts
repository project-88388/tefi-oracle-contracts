import Long from "long";
import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "stride.ratelimit";
export interface AddRateLimitProposal {
    title: string;
    description: string;
    denom: string;
    channelId: string;
    maxPercentSend: string;
    maxPercentRecv: string;
    durationHours: Long;
    deposit: string;
}
export interface UpdateRateLimitProposal {
    title: string;
    description: string;
    denom: string;
    channelId: string;
    maxPercentSend: string;
    maxPercentRecv: string;
    durationHours: Long;
    deposit: string;
}
export interface RemoveRateLimitProposal {
    title: string;
    description: string;
    denom: string;
    channelId: string;
    deposit: string;
}
export interface ResetRateLimitProposal {
    title: string;
    description: string;
    denom: string;
    channelId: string;
    deposit: string;
}
export declare const AddRateLimitProposal: {
    encode(message: AddRateLimitProposal, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): AddRateLimitProposal;
    fromJSON(object: any): AddRateLimitProposal;
    toJSON(message: AddRateLimitProposal): unknown;
    fromPartial(object: DeepPartial<AddRateLimitProposal>): AddRateLimitProposal;
};
export declare const UpdateRateLimitProposal: {
    encode(message: UpdateRateLimitProposal, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): UpdateRateLimitProposal;
    fromJSON(object: any): UpdateRateLimitProposal;
    toJSON(message: UpdateRateLimitProposal): unknown;
    fromPartial(object: DeepPartial<UpdateRateLimitProposal>): UpdateRateLimitProposal;
};
export declare const RemoveRateLimitProposal: {
    encode(message: RemoveRateLimitProposal, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): RemoveRateLimitProposal;
    fromJSON(object: any): RemoveRateLimitProposal;
    toJSON(message: RemoveRateLimitProposal): unknown;
    fromPartial(object: DeepPartial<RemoveRateLimitProposal>): RemoveRateLimitProposal;
};
export declare const ResetRateLimitProposal: {
    encode(message: ResetRateLimitProposal, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): ResetRateLimitProposal;
    fromJSON(object: any): ResetRateLimitProposal;
    toJSON(message: ResetRateLimitProposal): unknown;
    fromPartial(object: DeepPartial<ResetRateLimitProposal>): ResetRateLimitProposal;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined | Long;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
