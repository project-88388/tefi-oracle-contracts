import Long from "long";
import { grpc } from "@improbable-eng/grpc-web";
import _m0 from "protobufjs/minimal";
import { Params, DepositRecord, UserRedemptionRecord, EpochUnbondingRecord } from "../../stride/records/genesis";
import { PageRequest, PageResponse } from "../../cosmos/base/query/v1beta1/pagination";
export declare const protobufPackage = "stride.records";
/** QueryParamsRequest is request type for the Query/Params RPC method. */
export interface QueryParamsRequest {
}
/** QueryParamsResponse is response type for the Query/Params RPC method. */
export interface QueryParamsResponse {
    /** params holds all the parameters of this module. */
    params?: Params;
}
export interface QueryGetDepositRecordRequest {
    id: Long;
}
export interface QueryGetDepositRecordResponse {
    depositRecord?: DepositRecord;
}
export interface QueryAllDepositRecordRequest {
    pagination?: PageRequest;
}
export interface QueryAllDepositRecordResponse {
    depositRecord: DepositRecord[];
    pagination?: PageResponse;
}
export interface QueryGetUserRedemptionRecordRequest {
    id: string;
}
export interface QueryGetUserRedemptionRecordResponse {
    userRedemptionRecord?: UserRedemptionRecord;
}
export interface QueryAllUserRedemptionRecordRequest {
    pagination?: PageRequest;
}
export interface QueryAllUserRedemptionRecordResponse {
    userRedemptionRecord: UserRedemptionRecord[];
    pagination?: PageResponse;
}
/** Query UserRedemptionRecords by chainId / userId pair */
export interface QueryAllUserRedemptionRecordForUserRequest {
    chainId: string;
    day: Long;
    address: string;
    limit: Long;
    pagination?: PageRequest;
}
export interface QueryAllUserRedemptionRecordForUserResponse {
    userRedemptionRecord: UserRedemptionRecord[];
    pagination?: PageResponse;
}
export interface QueryGetEpochUnbondingRecordRequest {
    epochNumber: Long;
}
export interface QueryGetEpochUnbondingRecordResponse {
    epochUnbondingRecord?: EpochUnbondingRecord;
}
export interface QueryAllEpochUnbondingRecordRequest {
    pagination?: PageRequest;
}
export interface QueryAllEpochUnbondingRecordResponse {
    epochUnbondingRecord: EpochUnbondingRecord[];
    pagination?: PageResponse;
}
export declare const QueryParamsRequest: {
    encode(_: QueryParamsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryParamsRequest;
    fromJSON(_: any): QueryParamsRequest;
    toJSON(_: QueryParamsRequest): unknown;
    fromPartial(_: DeepPartial<QueryParamsRequest>): QueryParamsRequest;
};
export declare const QueryParamsResponse: {
    encode(message: QueryParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryParamsResponse;
    fromJSON(object: any): QueryParamsResponse;
    toJSON(message: QueryParamsResponse): unknown;
    fromPartial(object: DeepPartial<QueryParamsResponse>): QueryParamsResponse;
};
export declare const QueryGetDepositRecordRequest: {
    encode(message: QueryGetDepositRecordRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryGetDepositRecordRequest;
    fromJSON(object: any): QueryGetDepositRecordRequest;
    toJSON(message: QueryGetDepositRecordRequest): unknown;
    fromPartial(object: DeepPartial<QueryGetDepositRecordRequest>): QueryGetDepositRecordRequest;
};
export declare const QueryGetDepositRecordResponse: {
    encode(message: QueryGetDepositRecordResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryGetDepositRecordResponse;
    fromJSON(object: any): QueryGetDepositRecordResponse;
    toJSON(message: QueryGetDepositRecordResponse): unknown;
    fromPartial(object: DeepPartial<QueryGetDepositRecordResponse>): QueryGetDepositRecordResponse;
};
export declare const QueryAllDepositRecordRequest: {
    encode(message: QueryAllDepositRecordRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryAllDepositRecordRequest;
    fromJSON(object: any): QueryAllDepositRecordRequest;
    toJSON(message: QueryAllDepositRecordRequest): unknown;
    fromPartial(object: DeepPartial<QueryAllDepositRecordRequest>): QueryAllDepositRecordRequest;
};
export declare const QueryAllDepositRecordResponse: {
    encode(message: QueryAllDepositRecordResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryAllDepositRecordResponse;
    fromJSON(object: any): QueryAllDepositRecordResponse;
    toJSON(message: QueryAllDepositRecordResponse): unknown;
    fromPartial(object: DeepPartial<QueryAllDepositRecordResponse>): QueryAllDepositRecordResponse;
};
export declare const QueryGetUserRedemptionRecordRequest: {
    encode(message: QueryGetUserRedemptionRecordRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryGetUserRedemptionRecordRequest;
    fromJSON(object: any): QueryGetUserRedemptionRecordRequest;
    toJSON(message: QueryGetUserRedemptionRecordRequest): unknown;
    fromPartial(object: DeepPartial<QueryGetUserRedemptionRecordRequest>): QueryGetUserRedemptionRecordRequest;
};
export declare const QueryGetUserRedemptionRecordResponse: {
    encode(message: QueryGetUserRedemptionRecordResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryGetUserRedemptionRecordResponse;
    fromJSON(object: any): QueryGetUserRedemptionRecordResponse;
    toJSON(message: QueryGetUserRedemptionRecordResponse): unknown;
    fromPartial(object: DeepPartial<QueryGetUserRedemptionRecordResponse>): QueryGetUserRedemptionRecordResponse;
};
export declare const QueryAllUserRedemptionRecordRequest: {
    encode(message: QueryAllUserRedemptionRecordRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryAllUserRedemptionRecordRequest;
    fromJSON(object: any): QueryAllUserRedemptionRecordRequest;
    toJSON(message: QueryAllUserRedemptionRecordRequest): unknown;
    fromPartial(object: DeepPartial<QueryAllUserRedemptionRecordRequest>): QueryAllUserRedemptionRecordRequest;
};
export declare const QueryAllUserRedemptionRecordResponse: {
    encode(message: QueryAllUserRedemptionRecordResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryAllUserRedemptionRecordResponse;
    fromJSON(object: any): QueryAllUserRedemptionRecordResponse;
    toJSON(message: QueryAllUserRedemptionRecordResponse): unknown;
    fromPartial(object: DeepPartial<QueryAllUserRedemptionRecordResponse>): QueryAllUserRedemptionRecordResponse;
};
export declare const QueryAllUserRedemptionRecordForUserRequest: {
    encode(message: QueryAllUserRedemptionRecordForUserRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryAllUserRedemptionRecordForUserRequest;
    fromJSON(object: any): QueryAllUserRedemptionRecordForUserRequest;
    toJSON(message: QueryAllUserRedemptionRecordForUserRequest): unknown;
    fromPartial(object: DeepPartial<QueryAllUserRedemptionRecordForUserRequest>): QueryAllUserRedemptionRecordForUserRequest;
};
export declare const QueryAllUserRedemptionRecordForUserResponse: {
    encode(message: QueryAllUserRedemptionRecordForUserResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryAllUserRedemptionRecordForUserResponse;
    fromJSON(object: any): QueryAllUserRedemptionRecordForUserResponse;
    toJSON(message: QueryAllUserRedemptionRecordForUserResponse): unknown;
    fromPartial(object: DeepPartial<QueryAllUserRedemptionRecordForUserResponse>): QueryAllUserRedemptionRecordForUserResponse;
};
export declare const QueryGetEpochUnbondingRecordRequest: {
    encode(message: QueryGetEpochUnbondingRecordRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryGetEpochUnbondingRecordRequest;
    fromJSON(object: any): QueryGetEpochUnbondingRecordRequest;
    toJSON(message: QueryGetEpochUnbondingRecordRequest): unknown;
    fromPartial(object: DeepPartial<QueryGetEpochUnbondingRecordRequest>): QueryGetEpochUnbondingRecordRequest;
};
export declare const QueryGetEpochUnbondingRecordResponse: {
    encode(message: QueryGetEpochUnbondingRecordResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryGetEpochUnbondingRecordResponse;
    fromJSON(object: any): QueryGetEpochUnbondingRecordResponse;
    toJSON(message: QueryGetEpochUnbondingRecordResponse): unknown;
    fromPartial(object: DeepPartial<QueryGetEpochUnbondingRecordResponse>): QueryGetEpochUnbondingRecordResponse;
};
export declare const QueryAllEpochUnbondingRecordRequest: {
    encode(message: QueryAllEpochUnbondingRecordRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryAllEpochUnbondingRecordRequest;
    fromJSON(object: any): QueryAllEpochUnbondingRecordRequest;
    toJSON(message: QueryAllEpochUnbondingRecordRequest): unknown;
    fromPartial(object: DeepPartial<QueryAllEpochUnbondingRecordRequest>): QueryAllEpochUnbondingRecordRequest;
};
export declare const QueryAllEpochUnbondingRecordResponse: {
    encode(message: QueryAllEpochUnbondingRecordResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): QueryAllEpochUnbondingRecordResponse;
    fromJSON(object: any): QueryAllEpochUnbondingRecordResponse;
    toJSON(message: QueryAllEpochUnbondingRecordResponse): unknown;
    fromPartial(object: DeepPartial<QueryAllEpochUnbondingRecordResponse>): QueryAllEpochUnbondingRecordResponse;
};
/** Query defines the gRPC querier service. */
export interface Query {
    /** Parameters queries the parameters of the module. */
    Params(request: DeepPartial<QueryParamsRequest>, metadata?: grpc.Metadata): Promise<QueryParamsResponse>;
    /** Queries a UserRedemptionRecord by id. */
    UserRedemptionRecord(request: DeepPartial<QueryGetUserRedemptionRecordRequest>, metadata?: grpc.Metadata): Promise<QueryGetUserRedemptionRecordResponse>;
    /** Queries a list of UserRedemptionRecord items. */
    UserRedemptionRecordAll(request: DeepPartial<QueryAllUserRedemptionRecordRequest>, metadata?: grpc.Metadata): Promise<QueryAllUserRedemptionRecordResponse>;
    /** Queries a list of UserRedemptionRecord items by chainId / userId pair. */
    UserRedemptionRecordForUser(request: DeepPartial<QueryAllUserRedemptionRecordForUserRequest>, metadata?: grpc.Metadata): Promise<QueryAllUserRedemptionRecordForUserResponse>;
    /** Queries a EpochUnbondingRecord by id. */
    EpochUnbondingRecord(request: DeepPartial<QueryGetEpochUnbondingRecordRequest>, metadata?: grpc.Metadata): Promise<QueryGetEpochUnbondingRecordResponse>;
    /** Queries a list of EpochUnbondingRecord items. */
    EpochUnbondingRecordAll(request: DeepPartial<QueryAllEpochUnbondingRecordRequest>, metadata?: grpc.Metadata): Promise<QueryAllEpochUnbondingRecordResponse>;
    /** Queries a DepositRecord by id. */
    DepositRecord(request: DeepPartial<QueryGetDepositRecordRequest>, metadata?: grpc.Metadata): Promise<QueryGetDepositRecordResponse>;
    /** Queries a list of DepositRecord items. */
    DepositRecordAll(request: DeepPartial<QueryAllDepositRecordRequest>, metadata?: grpc.Metadata): Promise<QueryAllDepositRecordResponse>;
}
export declare class QueryClientImpl implements Query {
    private readonly rpc;
    constructor(rpc: Rpc);
    Params(request: DeepPartial<QueryParamsRequest>, metadata?: grpc.Metadata): Promise<QueryParamsResponse>;
    UserRedemptionRecord(request: DeepPartial<QueryGetUserRedemptionRecordRequest>, metadata?: grpc.Metadata): Promise<QueryGetUserRedemptionRecordResponse>;
    UserRedemptionRecordAll(request: DeepPartial<QueryAllUserRedemptionRecordRequest>, metadata?: grpc.Metadata): Promise<QueryAllUserRedemptionRecordResponse>;
    UserRedemptionRecordForUser(request: DeepPartial<QueryAllUserRedemptionRecordForUserRequest>, metadata?: grpc.Metadata): Promise<QueryAllUserRedemptionRecordForUserResponse>;
    EpochUnbondingRecord(request: DeepPartial<QueryGetEpochUnbondingRecordRequest>, metadata?: grpc.Metadata): Promise<QueryGetEpochUnbondingRecordResponse>;
    EpochUnbondingRecordAll(request: DeepPartial<QueryAllEpochUnbondingRecordRequest>, metadata?: grpc.Metadata): Promise<QueryAllEpochUnbondingRecordResponse>;
    DepositRecord(request: DeepPartial<QueryGetDepositRecordRequest>, metadata?: grpc.Metadata): Promise<QueryGetDepositRecordResponse>;
    DepositRecordAll(request: DeepPartial<QueryAllDepositRecordRequest>, metadata?: grpc.Metadata): Promise<QueryAllDepositRecordResponse>;
}
export declare const QueryDesc: {
    serviceName: string;
};
export declare const QueryParamsDesc: UnaryMethodDefinitionish;
export declare const QueryUserRedemptionRecordDesc: UnaryMethodDefinitionish;
export declare const QueryUserRedemptionRecordAllDesc: UnaryMethodDefinitionish;
export declare const QueryUserRedemptionRecordForUserDesc: UnaryMethodDefinitionish;
export declare const QueryEpochUnbondingRecordDesc: UnaryMethodDefinitionish;
export declare const QueryEpochUnbondingRecordAllDesc: UnaryMethodDefinitionish;
export declare const QueryDepositRecordDesc: UnaryMethodDefinitionish;
export declare const QueryDepositRecordAllDesc: UnaryMethodDefinitionish;
interface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {
    requestStream: any;
    responseStream: any;
}
declare type UnaryMethodDefinitionish = UnaryMethodDefinitionishR;
interface Rpc {
    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, request: any, metadata: grpc.Metadata | undefined): Promise<any>;
}
export declare class GrpcWebImpl {
    private host;
    private options;
    constructor(host: string, options: {
        transport?: grpc.TransportFactory;
        debug?: boolean;
        metadata?: grpc.Metadata;
    });
    unary<T extends UnaryMethodDefinitionish>(methodDesc: T, _request: any, metadata: grpc.Metadata | undefined): Promise<any>;
}
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined | Long;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
